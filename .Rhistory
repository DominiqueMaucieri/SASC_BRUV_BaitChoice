}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Otariidae" #HERE
) {
ClassAbund$Class[i] <- "Mammalia"
}
}
is.na(ClassAbund$Class)
View(ClassAbund)
nclasses <- factor(CLASSES)
nclasses <- factor(CLASSES)
nclasses
nclasses <- levels(nclasses)
nclasses
nclasses <- length(nclasses)
nclasses
ClassAbund$group=paste(ClassAbund$Site, ClassAbund$Date)
ClassAbund[c( 3, 4, 5, 6, 7, 12, 13,14, 16, 17 ,18, 19, 20,21,22,23,24,25,26,27,28,29,30 )] <- list(NULL)
ClassAbundLength <- length(ClassAbund$Site)
ClassAbund$Class <- NA
###### CLASS ######
#then i split the data into classes and looked at how abundant each class was
#these were the classes our data contained, if you have more, you need to add these to the data
#I will show you how to add them
Actinopterygii <- c("Ariidae","Blenniidae","Cheilodactylidae", "Clinidae", "Mugilidae", "Sparidae")
Malacostraca <- c("Cymothoidae", "Palinuridae", "Plagusiidae")
Chondrichthyes<- c("Dasyatidae", "Scyliorhinidae", "Triakidae")
Cephalopoda <- c("Loliginidae", "Octopodidae")
Myxini <- c("Myxinidae")
Mammalia <- c("Otariidae")
ClassAbund <- bruvdata
CLASSES <- factor(ClassAbund$Family_name)
levels(CLASSES)
ClassAbund$group=paste(ClassAbund$Site, ClassAbund$Date)
ClassAbund[c( 3, 4, 5, 6, 7, 12, 13,14, 16, 17 ,18, 19, 20,21,22,23,24,25,26,27,28,29,30 )] <- list(NULL)
ClassAbundLength <- length(ClassAbund$Site)
ClassAbund$Class <- NA
#because people don't know how to spell:
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Palinurdae") {
ClassAbund$Family_name[i] <- "Palinuridae"
}
}
Actinopterygii <- c("Ariidae","Blenniidae","Cheilodactylidae", "Clinidae", "Mugilidae", "Sparidae")
Malacostraca <- c("Cymothoidae", "Palinuridae", "Plagusiidae")
Chondrichthyes<- c("Dasyatidae", "Scyliorhinidae", "Triakidae")
Cephalopoda <- c("Loliginidae", "Octopodidae")
Myxini <- c("Myxinidae")
Mammalia <- c("Otariidae")
ClassAbund <- bruvdata
CLASSES <- factor(ClassAbund$Family_name)
levels(CLASSES)
ClassAbund$group=paste(ClassAbund$Site, ClassAbund$Date)
ClassAbund[c( 3, 4, 5, 6, 7,9,11, 12, 13,14, 16, 17 ,18, 19, 20,21,22,23,24,25,26,27,28,29,30 )] <- list(NULL)
ClassAbund$group=paste(ClassAbund$Site, ClassAbund$Date)
###### CLASS ######
#then i split the data into classes and looked at how abundant each class was
#these were the classes our data contained, if you have more, you need to add these to the data
#I will show you how to add them
Actinopterygii <- c("Ariidae","Blenniidae","Cheilodactylidae", "Clinidae", "Mugilidae", "Sparidae")
Malacostraca <- c("Cymothoidae", "Palinuridae", "Plagusiidae")
Chondrichthyes<- c("Dasyatidae", "Scyliorhinidae", "Triakidae")
Cephalopoda <- c("Loliginidae", "Octopodidae")
Myxini <- c("Myxinidae")
Mammalia <- c("Otariidae")
ClassAbund <- bruvdata
CLASSES <- factor(ClassAbund$Family_name)
levels(CLASSES)
ClassAbund$group=paste(ClassAbund$Site, ClassAbund$Date)
ClassAbund[c( 3, 4, 5, 6, 7,9,11, 12, 13,14, 16, 17 ,18, 19, 20,21,22,23,24,25,26,27,28,29,30 )] <- list(NULL)
###### CLASS ######
#then i split the data into classes and looked at how abundant each class was
#these were the classes our data contained, if you have more, you need to add these to the data
#I will show you how to add them
Actinopterygii <- c("Ariidae","Blenniidae","Cheilodactylidae", "Clinidae", "Mugilidae", "Sparidae")
Malacostraca <- c("Cymothoidae", "Palinuridae", "Plagusiidae")
###### CLASS ######
#then i split the data into classes and looked at how abundant each class was
#these were the classes our data contained, if you have more, you need to add these to the data
#I will show you how to add them
Actinopterygii <- c("Ariidae","Blenniidae","Cheilodactylidae", "Clinidae", "Mugilidae", "Sparidae")
Malacostraca <- c("Cymothoidae", "Palinuridae", "Plagusiidae")
Chondrichthyes<- c("Dasyatidae", "Scyliorhinidae", "Triakidae")
Cephalopoda <- c("Loliginidae", "Octopodidae")
Myxini <- c("Myxinidae")
Mammalia <- c("Otariidae")
ClassAbund <- bruvdata
CLASSES <- factor(ClassAbund$Family_name)
levels(CLASSES)
ClassAbund$group=paste(ClassAbund$Site, ClassAbund$Date)
ClassAbund[c(1,2, 3, 4, 5, 6, 7,9,11, 12, 13,14, 16, 17 ,18, 19, 20,21,22,23,24,25,26,27,28,29,30 )] <- list(NULL)
ClassAbundLength <- length(ClassAbund$group)
ClassAbundLength <- length(ClassAbund$group)
ClassAbund$Class <- NA
#because people don't know how to spell:
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Palinurdae") {
ClassAbund$Family_name[i] <- "Palinuridae"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Ariidae"|ClassAbund$Family_name[i] == "Blenniidae"|ClassAbund$Family_name[i] == "Cheilodactylidae"|ClassAbund$Family_name[i] ==  "Clinidae"|ClassAbund$Family_name[i] ==  "Mugilidae"|ClassAbund$Family_name[i] ==  "Sparidae" #HERE
) {
ClassAbund$Class[i] <- "Actinopterygii"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] =="Cymothoidae"|ClassAbund$Family_name[i] == "Palinuridae"|ClassAbund$Family_name[i] == "Plagusiidae" #HERE
) {
ClassAbund$Class[i] <- "Malacostraca"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] =="Dasyatidae"|ClassAbund$Family_name[i] == "Scyliorhinidae"|ClassAbund$Family_name[i] == "Triakidae" #HERE
) {
ClassAbund$Class[i] <- "Chondrichthyes"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Loliginidae"|ClassAbund$Family_name[i] ==  "Octopodidae" #HERE
) {
ClassAbund$Class[i] <- "Cephalopoda"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Myxinidae" #HERE
) {
ClassAbund$Class[i] <- "Myxini"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Otariidae" #HERE
) {
ClassAbund$Class[i] <- "Mammalia"
}
}
is.na(ClassAbund$Class)
ClassVector <- factor(ClassAbund$Class)
ClassVector
ff<-levels(ClassVector)
ff
ClassLevels<-levels(ClassVector)
ClassLength <- length(ClassLevels)
ClassLength
ClassLevels
GroupVector <- factor(ClassAbund$group)
GroupLevels <- levels(GroupVector)
GroupLevels
GroupLength <- length(GroupLevels)
RowLength <- ClassLength * GroupLength
ClassLength
GroupLength
RowLength
ClassSumm <- data.frame(matrix(NA, nrow = (RowLength), ncol = 4))
ClassSumm
colnames(ClassSumm) <- c("ID","Class", "Abundance", "Bait")
ClassSumm
ClassCol <- ClassLevels*GroupLength
ClassCol <- (ClassLevels)*GroupLength
setwd("~/Dropbox/Documents/Research/SASC/BRUV Paper")
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggpubr)
library(vegan)
library(devtools)
library(plotrix)
library(reshape)
library(unmarked)
library(AICcmodavg)
library(stats)
library(MASS)
library(data.table)
library(lme4)
library(emmeans)
library(tidyr)
library(car)
#This will load the data that will be used for the entire data analysis
#Yes Aaron i am only using one data sheet
bruvdata <- read_excel("BRUV_master.xlsx", sheet = "Compiled Data", col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "text", "text",  "text", "text", "text", "numeric","text", "numeric", "text", "text","numeric", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "text", "numeric", "text", "numeric", "numeric", "text"))
#This will load the data that will be used for the entire data analysis
#Yes Aaron i am only using one data sheet
bruvdata <- read_excel("BRUV_master.xlsx", sheet = "Compiled Data", col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "text", "text",  "text", "text", "text", "numeric","text", "numeric", "text", "text","numeric", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "text", "numeric", "text", "numeric", "numeric", "text"))
###### CLASS ######
#then i split the data into classes and looked at how abundant each class was
#these were the classes our data contained, if you have more, you need to add these to the data
#I will show you how to add them
Actinopterygii <- c("Ariidae","Blenniidae","Cheilodactylidae", "Clinidae", "Mugilidae", "Sparidae")
Malacostraca <- c("Cymothoidae", "Palinuridae", "Plagusiidae")
Chondrichthyes<- c("Dasyatidae", "Scyliorhinidae", "Triakidae")
Cephalopoda <- c("Loliginidae", "Octopodidae")
Myxini <- c("Myxinidae")
Mammalia <- c("Otariidae")
ClassAbund <- bruvdata
CLASSES <- factor(ClassAbund$Family_name)
levels(CLASSES)
ClassAbund$group=paste(ClassAbund$Site, ClassAbund$Date)
ClassAbund[c(1,2, 3, 4, 5, 6, 7,9,11, 12, 13,14, 16, 17 ,18, 19, 20,21,22,23,24,25,26,27,28,29,30 )] <- list(NULL)
ClassAbundLength <- length(ClassAbund$group)
ClassAbund$Class <- NA
#because people don't know how to spell:
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Palinurdae") {
ClassAbund$Family_name[i] <- "Palinuridae"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Ariidae"|ClassAbund$Family_name[i] == "Blenniidae"|ClassAbund$Family_name[i] == "Cheilodactylidae"|ClassAbund$Family_name[i] ==  "Clinidae"|ClassAbund$Family_name[i] ==  "Mugilidae"|ClassAbund$Family_name[i] ==  "Sparidae" #HERE
) {
ClassAbund$Class[i] <- "Actinopterygii"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] =="Cymothoidae"|ClassAbund$Family_name[i] == "Palinuridae"|ClassAbund$Family_name[i] == "Plagusiidae" #HERE
) {
ClassAbund$Class[i] <- "Malacostraca"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] =="Dasyatidae"|ClassAbund$Family_name[i] == "Scyliorhinidae"|ClassAbund$Family_name[i] == "Triakidae" #HERE
) {
ClassAbund$Class[i] <- "Chondrichthyes"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Loliginidae"|ClassAbund$Family_name[i] ==  "Octopodidae" #HERE
) {
ClassAbund$Class[i] <- "Cephalopoda"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Myxinidae" #HERE
) {
ClassAbund$Class[i] <- "Myxini"
}
}
for (i in 1:ClassAbundLength){
if(ClassAbund$Family_name[i] == "Otariidae" #HERE
) {
ClassAbund$Class[i] <- "Mammalia"
}
}
is.na(ClassAbund$Class)
ClassVector <- factor(ClassAbund$Class)
ClassLevels <- levels(ClassVector)
ClassLength <- length(ClassLevels)
GroupVector <- factor(ClassAbund$group)
GroupLevels <- levels(GroupVector)
GroupLength <- length(GroupLevels)
ClassSumm <- data.frame(matrix(NA, nrow = (ClassLength), ncol = 3))
colnames(ClassSumm) <- c("ID","Class", "Bait")
ClassSumm$Class <- ClassLevels
#make sure everything has been changed to a numeric system
as.factor(ClassAbund$Bait)
setwd("PATHWAY FOR A FOLDER INSIDE MAIN WORKING DIRECTORY HERE")
View(ClassAbund)
for(i in 1:GroupLength){
groupname <- GroupLevels[i]
as.factor(groupname)
zz <- subset(ClassAbund, group == groupname)
ClassSumm$ID <- groupname
BAIT <- rep(zz$Bait[1], times = 6)
ClassSumm$Bait <- BAIT
xx<-aggregate(zz$MaxN, by=list(zz$Class), FUN=sum)
colnames(xx) <- c("Class", "Abundance")
lengthxx <- length(xx$Class)
yy <- merge(xx,ClassSumm,by=c("Class"), all = TRUE)
yy[is.na(yy)] <- 0
write.table(yy,groupname,sep="\t",row.names=TRUE)
}
filelist <- list.files()
filelist
GroupLevels
load("~/Desktop/Maucieri_Coral_Diversity/Data/Maucieri_Coral_Diversity_Master.RData")
#setting working directory
setwd("~/Desktop/Maucieri_Coral_Diversity")
#loading my packages
library("vegan")
#loading my packages
library("vegan")
#loading my packages
library(vegan)
Maucieri.Coral.Diversity.Master <- read.csv("~/Desktop/Maucieri_Coral_Diversity/Data/Maucieri.Coral.Diversity.Master.csv")
View(Maucieri.Coral.Diversity.Master)
#To clear the workspace
rm(list = ls(all=T))
#setting working directory
setwd("~/Desktop/Maucieri_Coral_Diversity/Datas")
#setting working directory
setwd("~/Desktop/Maucieri_Coral_Diversity/Data")
#loading my packages
library(vegan) #Shannon, Simpson, and Fisher diversity indices and rarefied species richness
#import my data
Corals <- read.csv("~/Desktop/Maucieri_Coral_Diversity/Data/Maucieri.Coral.Diversity.Master.csv")
library(ggplot2)
install.packages("viridis")
library(viridis)
library(viridis)
?theme_bw
install.packages("extrafont")
#My signature ggplot theme
theme_joey <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")
}
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")%+replace%
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
}
#This line of code will clear any presaved settings that might interfere with how my code runs
rm(list=ls(all=T))
#This line of code will clear any saved plots so you start nice and fresh
dev.off()
setwd("~/Dropbox/Documents/Research/SASC/BRUV Paper")
setwd("~/Dropbox/Documents/Research/SASC/BRUV Paper/SASC_BRUV_BaitChoice")
#This line of code will clear any presaved settings that might interfere with how my code runs
rm(list=ls(all=T))
#This line of code will clear any saved plots so you start nice and fresh
dev.off()
setwd("~/Dropbox/Documents/Research/SASC/BRUV Paper/SASC_BRUV_BaitChoice")
setwd("~/Dropbox/Documents/Research/SASC/BRUV_Paper/SASC_BRUV_BaitChoice")
###### Packages and Data ######
#now you have to run all the packages so they will be active during this R session
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggpubr)
library(vegan)
library(devtools)
library(plotrix)
library(reshape)
library(unmarked)
library(AICcmodavg)
library(stats)
library(MASS)
library(data.table)
library(lme4)
library(emmeans)
library(tidyr)
library(car)
#This will load the data that will be used for the entire data analysis
#Yes Aaron i am only using one data sheet
bruvdata <- read_excel("BRUV_master.xlsx", sheet = "Compiled Data", col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "text", "text",  "text", "text", "text", "numeric","text", "numeric", "text", "text","numeric", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "text", "numeric", "text", "numeric", "numeric", "text"))
###### SHANNON ######
#First i ran a shannon index on each site to take into account abundance and diversity
ShannonData <- bruvdata
ShannonData[c( 3, 4, 5, 6, 7, 9, 11, 12, 13,14, 16, 17 ,18, 19, 20,21,22,23,24,25,26,27,28,29,30 )] <- list(NULL)
ShannonData$group=paste(ShannonData$Site, ShannonData$Date)
ShanLength <- length(ShannonData$Site)
as.factor(ShannonData$group)
ShannonData$Shan <- 0
for(i in 1:ShanLength){
xx <- subset(ShannonData, group==ShannonData$group[i])
cc <- diversity(xx$MaxN, index = "shannon", MARGIN = 1, base = exp(1))
ShannonData$Shan [i] <- cc
}
ShanVector <- factor(ShannonData$group)
aa<-levels(ShanVector)
bb <- length(aa)
ShanSumm <- data.frame(matrix(NA, nrow = bb, ncol = 3))
colnames(ShanSumm) <- c("GroupID", "ShanIndex", "Bait")
ShanSumm$GroupID <- aa
as.numeric(ShannonData$Shan)
as.factor(ShannonData$Bait)
for(i in 1:bb){
xx<-subset(ShannonData, group==ShanSumm$GroupID[i])
ShanSumm$ShanIndex[i] <- xx[1,7]
ShanSumm$Bait[i] <- xx[1,3]
}
as.data.frame(ShanSumm)
ShanSumm$ShanIndex <- unlist(ShanSumm$ShanIndex)
ShanSumm$Bait <-unlist(ShanSumm$Bait)
qqnorm(ShanSumm$ShanIndex)
qqline(ShanSumm$ShanIndex)
shanttest<-t.test(ShanSumm$ShanIndex~ShanSumm$Bait)
shanttest
Sar<-subset(ShanSumm, Bait=="Sardines")
SqP<-subset(ShanSumm, Bait=="Squid_pike")
SarSEM<- sd(Sar$ShanIndex)/sqrt(length(Sar$ShanIndex))
SqPSEM<- sd(SqP$ShanIndex)/sqrt(length(SqP$ShanIndex))
ShanPlotDF <- data.frame(matrix(NA, nrow = 2, ncol = 4))
colnames(ShanPlotDF) <- c("Mean", "SEM", "poslim", "neglim")
rownames(ShanPlotDF) <- c("Sardines", "Squid and Pike")
ShanPlotDF$Mean <- shanttest$estimate
ShanPlotDF$SEM <- c(SarSEM, SqPSEM)
ShanPlotDF$poslim <- (ShanPlotDF$Mean + ShanPlotDF$SEM)
ShanPlotDF$neglim <- (ShanPlotDF$Mean - ShanPlotDF$SEM)
ShanPlotDF$Bait <- c("Sardines", "Squid and Pike")
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
###### Total Abundance ######
#then i analyzed the total abundance at each site
Abundance <- bruvdata
Abundance$group=paste(Abundance$Site, Abundance$Date)
dev.off()
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")%+replace%
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
}
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")%+replace%
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
}
dev.off()
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
ShanPlot
theme_DOM <- theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
dev.off()
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
theme_DOM <- theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
dev.off()
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")%+replace%
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
}
dev.off()
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
theme_classic(base_size=12, base_family="Tempus Sans ITC")
theme_classic(base_size=12, base_family="Tempus Sans ITC")}
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")}
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
library(extrafont) #need to have Times New Roman
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")}
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_classic()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Tempus Sans ITC")}
dev.off()
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_classic()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
theme_classic(base_size=12, base_family="Times New Roman")}
#My signature ggplot theme
theme_DOM <- function () {
theme_classic(base_size=12, base_family="Times New Roman")}
dev.off()
ShanPlot <- ggplot(ShanPlotDF, aes(x = Bait, y = Mean)) +geom_point()+
labs(x="Bait type", y="Mean Shannon Diversity Index", title="", colour="", size=3) +
theme_DOM()+
geom_errorbar(aes(ymax=poslim,ymin=neglim),position=position_dodge(0.9), width=.1, data=ShanPlotDF)
ShanPlot
